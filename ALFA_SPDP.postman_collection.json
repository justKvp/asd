{
	"info": {
		"_postman_id": "18e7128f-65e1-4e5e-a1ed-442bb371bb32",
		"name": "ALFA_SPDP",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "15825969"
	},
	"item": [
		{
			"name": "TrustGate",
			"item": [
				{
					"name": "getToken",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.collectionVariables.set(\"token\", jsonData.token);",
									"console.log('token = ' + pm.collectionVariables.get(\"token\"));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"api-mvd-test\",\n    \"password\": \"Gjkgjghch34#7\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{ip}}/api/auth",
							"host": [
								"{{ip}}"
							],
							"path": [
								"api",
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "prepareIdPassportValidity",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.collectionVariables.set(\"rqID\", jsonData.id);",
									"console.log('rqID = ' + pm.collectionVariables.get(\"rqID\"));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"series\": \"3102\",\n    \"number\": \"010839\",\n    \"firstName\": \"Филипп\",\n    \"lastName\": \"Киркоров\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{ip}}/api/service/mvd/guvm/bank-passport-validity",
							"host": [
								"{{ip}}"
							],
							"path": [
								"api",
								"service",
								"mvd",
								"guvm",
								"bank-passport-validity"
							]
						}
					},
					"response": []
				},
				{
					"name": "prepareIdPassportValidity negative",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.collectionVariables.set(\"rqID\", jsonData.id);",
									"console.log('rqID = ' + pm.collectionVariables.get(\"rqID\"));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"series\": \"1111\",\n    \"number\": \"111111\",\n    \"firstName\": \"Филипп\",\n    \"lastName\": \"Киркоров\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{ip}}/api/service/mvd/guvm/bank-passport-validity",
							"host": [
								"{{ip}}"
							],
							"path": [
								"api",
								"service",
								"mvd",
								"guvm",
								"bank-passport-validity"
							]
						}
					},
					"response": []
				},
				{
					"name": "prepareTGResultForID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{ip}}/api/service/{{rqID}}",
							"host": [
								"{{ip}}"
							],
							"path": [
								"api",
								"service",
								"{{rqID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "cleanAuth",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{ip}}/api/cleanAuth",
							"host": [
								"{{ip}}"
							],
							"path": [
								"api",
								"cleanAuth"
							]
						}
					},
					"response": []
				},
				{
					"name": "cleanIds",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{ip}}/api/cleanIds",
							"host": [
								"{{ip}}"
							],
							"path": [
								"api",
								"cleanIds"
							]
						}
					},
					"response": []
				},
				{
					"name": "health",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://mock-trustgate.pdp-dev.moscow.alfaintra.net/health",
							"protocol": "http",
							"host": [
								"mock-trustgate",
								"pdp-dev",
								"moscow",
								"alfaintra",
								"net"
							],
							"path": [
								"health"
							]
						}
					},
					"response": []
				},
				{
					"name": "hello",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/hello",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"hello"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "jira",
			"item": [
				{
					"name": "send comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic VV9NMkJURDp2OEF4dFJBeEQyTmY=",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"body\": \"This is a comment regarding the quality of the response.\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://jira.moscow.alfaintra.net/rest/api/2/issue/SPDP-95/comment",
							"protocol": "https",
							"host": [
								"jira",
								"moscow",
								"alfaintra",
								"net"
							],
							"path": [
								"rest",
								"api",
								"2",
								"issue",
								"SPDP-95",
								"comment"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "platform",
			"item": [
				{
					"name": "deploy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "cookie",
								"value": "platform-csrf-token=6Ks4DiL4IEpVH9yYGc4HBzK2OvJfGZtLdZlQitbC496; platform-csrf-token-insecure=uHjy6p7llflxmCPbrdXI4stNlzEzCWHcsgK-0_2kWhJ",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"deployment\": {\n        \"gitRuleId\": \"0bf82ef2-b8e2-41b3-abd9-121015fa0806\",\n        \"scenarioId\": \"2b2b5973-252e-4e91-a604-b8add05d5c1d\",\n        \"autotest\": \"\",\n        \"order\": 0,\n        \"version\": \"1.0.0-6bc1eac-29\",\n        \"artifactUri\": \"http://binary.moscow.alfaintra.net/artifactory/api/storage/spdp-docker-snapshots/mock-trustgate/1.0.0-6bc1eac-29/manifest.json\",\n        \"services\": [\n            {\n                \"artifactUri\": \"http://binary.moscow.alfaintra.net/artifactory/api/storage/spdp-docker-snapshots/mock-trustgate/1.0.0-6bc1eac-29/manifest.json\",\n                \"serviceName\": \"mock-trustgate\",\n                \"sourceServiceName\": \"mock-trustgate\",\n                \"index\": -1,\n                \"priority\": false\n            }\n        ],\n        \"project\": \"b30683c6-f785-4015-b078-5c5988284775\",\n        \"branch\": \"dev\"\n    },\n    \"user\": {\n        \"id\": \"u_m2btd\",\n        \"name\": \"Владимиров Александр Александрович\",\n        \"firstName\": \"Александр\",\n        \"email\": \"aavladimirov@alfabank.ru\",\n        \"admin\": false,\n        \"userDomain\": \"moscow\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://platform/deploy/api/services/deploy",
							"protocol": "https",
							"host": [
								"platform"
							],
							"path": [
								"deploy",
								"api",
								"services",
								"deploy"
							]
						}
					},
					"response": []
				},
				{
					"name": "auth",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"value": "U_M2BTD",
									"type": "text"
								},
								{
									"key": "password",
									"value": "v8AxtRAxD2Nf",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://idp.alfaintra.net/auth/realms/users/login-actions/authenticate?session_code=yYdavBG6sPg-E4aVoxvu1SyCarTriF211UPU-fo7q21&execution=6e44c2b1-8a32-4f1b-9ee9-9236475dc61a&client_id=alfa-platform\n&tab_id=C_zvFvgQRrs1&cookie=\nKEYCLOAK_LOCALE=; Version=1; Comment=Expiring cookie; Expires=Thu, 01-Jan-1970 00:00:10 GMT; Max-Age=0; Path=/auth/realms/users/; HttpOnly;KC_RESTART=; Version=1; Expires=Thu, 01-Jan-1970 00:00:10 GMT; Max-Age=0; Path=/auth/realms/users/; HttpOnly;KEYCLOAK_IDENTITY=eyJhbGciOiJIUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICI3NDAyZmVkNS0wMjljLTRiOGEtYWViMC0xZDliOGEzYzNiNGEifQ.eyJleHAiOjE3MzMxNzExMTksImlhdCI6MTczMzEzNTExOSwianRpIjoiMmJhMDNjZGEtYmU4MC00NzE0LTkyNWEtMTVjYjQzZDU0M2E3IiwiaXNzIjoiaHR0cHM6Ly9pZHAuYWxmYWludHJhLm5ldC9hdXRoL3JlYWxtcy91c2VycyIsInN1YiI6IjlmMjQ5ZWRjLTRiMjYtNDkxZS1hMmQ4LWVlMTNlMWM5NmE3ZCIsInR5cCI6IlNlcmlhbGl6ZWQtSUQiLCJzZXNzaW9uX3N0YXRlIjoiYTU3MjJiOWUtNWVjYi00NDZmLTg3ODktMTBiMmUzM2QwZjI5Iiwic2lkIjoiYTU3MjJiOWUtNWVjYi00NDZmLTg3ODktMTBiMmUzM2QwZjI5Iiwic3RhdGVfY2hlY2tlciI6Ik9iM2hjSXVDM1dNamNRUVhyZTlLRkgyOE5rOFpCMU9qc29GQzBrLUZ6eWcifQ.Msu2dcT4olCRmrdgvE0-Ju8Q1HfyKMnR5moeXnmAqhc; Version=1; Path=/auth/realms/users/; SameSite=None; Secure; HttpOnly;KEYCLOAK_IDENTITY_LEGACY=eyJhbGciOiJIUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICI3NDAyZmVkNS0wMjljLTRiOGEtYWViMC0xZDliOGEzYzNiNGEifQ.eyJleHAiOjE3MzMxNzExMTksImlhdCI6MTczMzEzNTExOSwianRpIjoiMmJhMDNjZGEtYmU4MC00NzE0LTkyNWEtMTVjYjQzZDU0M2E3IiwiaXNzIjoiaHR0cHM6Ly9pZHAuYWxmYWludHJhLm5ldC9hdXRoL3JlYWxtcy91c2VycyIsInN1YiI6IjlmMjQ5ZWRjLTRiMjYtNDkxZS1hMmQ4LWVlMTNlMWM5NmE3ZCIsInR5cCI6IlNlcmlhbGl6ZWQtSUQiLCJzZXNzaW9uX3N0YXRlIjoiYTU3MjJiOWUtNWVjYi00NDZmLTg3ODktMTBiMmUzM2QwZjI5Iiwic2lkIjoiYTU3MjJiOWUtNWVjYi00NDZmLTg3ODktMTBiMmUzM2QwZjI5Iiwic3RhdGVfY2hlY2tlciI6Ik9iM2hjSXVDM1dNamNRUVhyZTlLRkgyOE5rOFpCMU9qc29GQzBrLUZ6eWcifQ.Msu2dcT4olCRmrdgvE0-Ju8Q1HfyKMnR5moeXnmAqhc; Version=1; Path=/auth/realms/users/; HttpOnly;KEYCLOAK_SESSION=users/9f249edc-4b26-491e-a2d8-ee13e1c96a7d/a5722b9e-5ecb-446f-8789-10b2e33d0f29; Version=1; Expires=Mon, 02-Dec-2024 20:25:19 GMT; Max-Age=36000; Path=/auth/realms/users/; SameSite=None; Secure;KEYCLOAK_SESSION_LEGACY=users/9f249edc-4b26-491e-a2d8-ee13e1c96a7d/a5722b9e-5ecb-446f-8789-10b2e33d0f29; Version=1; Expires=Mon, 02-Dec-2024 20:25:19 GMT; Max-Age=36000; Path=/auth/realms/users/;KEYCLOAK_REMEMBER_ME=; Version=1; Comment=Expiring cookie; Expires=Thu, 01-Jan-1970 00:00:10 GMT; Max-Age=0; Path=/auth/realms/users/; HttpOnly;",
							"protocol": "https",
							"host": [
								"idp",
								"alfaintra",
								"net"
							],
							"path": [
								"auth",
								"realms",
								"users",
								"login-actions",
								"authenticate"
							],
							"query": [
								{
									"key": "session_code",
									"value": "yYdavBG6sPg-E4aVoxvu1SyCarTriF211UPU-fo7q21"
								},
								{
									"key": "execution",
									"value": "6e44c2b1-8a32-4f1b-9ee9-9236475dc61a"
								},
								{
									"key": "client_id",
									"value": "alfa-platform\n"
								},
								{
									"key": "tab_id",
									"value": "C_zvFvgQRrs1"
								},
								{
									"key": "cookie",
									"value": "\nKEYCLOAK_LOCALE=; Version=1; Comment=Expiring cookie; Expires=Thu, 01-Jan-1970 00:00:10 GMT; Max-Age=0; Path=/auth/realms/users/; HttpOnly;KC_RESTART=; Version=1; Expires=Thu, 01-Jan-1970 00:00:10 GMT; Max-Age=0; Path=/auth/realms/users/; HttpOnly;KEYCLOAK_IDENTITY=eyJhbGciOiJIUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICI3NDAyZmVkNS0wMjljLTRiOGEtYWViMC0xZDliOGEzYzNiNGEifQ.eyJleHAiOjE3MzMxNzExMTksImlhdCI6MTczMzEzNTExOSwianRpIjoiMmJhMDNjZGEtYmU4MC00NzE0LTkyNWEtMTVjYjQzZDU0M2E3IiwiaXNzIjoiaHR0cHM6Ly9pZHAuYWxmYWludHJhLm5ldC9hdXRoL3JlYWxtcy91c2VycyIsInN1YiI6IjlmMjQ5ZWRjLTRiMjYtNDkxZS1hMmQ4LWVlMTNlMWM5NmE3ZCIsInR5cCI6IlNlcmlhbGl6ZWQtSUQiLCJzZXNzaW9uX3N0YXRlIjoiYTU3MjJiOWUtNWVjYi00NDZmLTg3ODktMTBiMmUzM2QwZjI5Iiwic2lkIjoiYTU3MjJiOWUtNWVjYi00NDZmLTg3ODktMTBiMmUzM2QwZjI5Iiwic3RhdGVfY2hlY2tlciI6Ik9iM2hjSXVDM1dNamNRUVhyZTlLRkgyOE5rOFpCMU9qc29GQzBrLUZ6eWcifQ.Msu2dcT4olCRmrdgvE0-Ju8Q1HfyKMnR5moeXnmAqhc; Version=1; Path=/auth/realms/users/; SameSite=None; Secure; HttpOnly;KEYCLOAK_IDENTITY_LEGACY=eyJhbGciOiJIUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICI3NDAyZmVkNS0wMjljLTRiOGEtYWViMC0xZDliOGEzYzNiNGEifQ.eyJleHAiOjE3MzMxNzExMTksImlhdCI6MTczMzEzNTExOSwianRpIjoiMmJhMDNjZGEtYmU4MC00NzE0LTkyNWEtMTVjYjQzZDU0M2E3IiwiaXNzIjoiaHR0cHM6Ly9pZHAuYWxmYWludHJhLm5ldC9hdXRoL3JlYWxtcy91c2VycyIsInN1YiI6IjlmMjQ5ZWRjLTRiMjYtNDkxZS1hMmQ4LWVlMTNlMWM5NmE3ZCIsInR5cCI6IlNlcmlhbGl6ZWQtSUQiLCJzZXNzaW9uX3N0YXRlIjoiYTU3MjJiOWUtNWVjYi00NDZmLTg3ODktMTBiMmUzM2QwZjI5Iiwic2lkIjoiYTU3MjJiOWUtNWVjYi00NDZmLTg3ODktMTBiMmUzM2QwZjI5Iiwic3RhdGVfY2hlY2tlciI6Ik9iM2hjSXVDM1dNamNRUVhyZTlLRkgyOE5rOFpCMU9qc29GQzBrLUZ6eWcifQ.Msu2dcT4olCRmrdgvE0-Ju8Q1HfyKMnR5moeXnmAqhc; Version=1; Path=/auth/realms/users/; HttpOnly;KEYCLOAK_SESSION=users/9f249edc-4b26-491e-a2d8-ee13e1c96a7d/a5722b9e-5ecb-446f-8789-10b2e33d0f29; Version=1; Expires=Mon, 02-Dec-2024 20:25:19 GMT; Max-Age=36000; Path=/auth/realms/users/; SameSite=None; Secure;KEYCLOAK_SESSION_LEGACY=users/9f249edc-4b26-491e-a2d8-ee13e1c96a7d/a5722b9e-5ecb-446f-8789-10b2e33d0f29; Version=1; Expires=Mon, 02-Dec-2024 20:25:19 GMT; Max-Age=36000; Path=/auth/realms/users/;KEYCLOAK_REMEMBER_ME=; Version=1; Comment=Expiring cookie; Expires=Thu, 01-Jan-1970 00:00:10 GMT; Max-Age=0; Path=/auth/realms/users/; HttpOnly;"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Equasion",
			"item": [
				{
					"name": "post",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test_spdp",
									"type": "string"
								},
								{
									"key": "password",
									"value": "k0htSrMVF-OHAIsi8Xn_Tdl9g",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-External-System-Code",
								"value": "SPDPB01",
								"type": "text"
							},
							{
								"key": "X-External-User-Code",
								"value": "SPDPB01",
								"type": "text"
							},
							{
								"key": "X-UserID",
								"value": "WSSQ",
								"type": "text"
							},
							{
								"key": "X-BranchNumber",
								"value": "0000",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<UWSCodeInvalidIdentityCardPostInParms>\n\t<sernum>3102010839</sernum>\n</UWSCodeInvalidIdentityCardPostInParms>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{ip}}/eq/code/invalididentitycard/v11/rest",
							"host": [
								"{{ip}}"
							],
							"path": [
								"eq",
								"code",
								"invalididentitycard",
								"v11",
								"rest"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "test_spdp",
									"type": "string"
								},
								{
									"key": "password",
									"value": "k0htSrMVF-OHAIsi8Xn_Tdl9g",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-External-System-Code",
								"value": "SPDPB01",
								"type": "text"
							},
							{
								"key": "X-External-User-Code",
								"value": "SPDPB01",
								"type": "text"
							},
							{
								"key": "X-UserID",
								"value": "WSSQ",
								"type": "text"
							},
							{
								"key": "X-BranchNumber",
								"value": "0000",
								"type": "text"
							},
							{
								"key": "sernum",
								"value": "3102010839",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{ip}}/eq/code/invalididentitycard/v11/rest",
							"host": [
								"{{ip}}"
							],
							"path": [
								"eq",
								"code",
								"invalididentitycard",
								"v11",
								"rest"
							]
						}
					},
					"response": []
				},
				{
					"name": "New Request",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{ip}}/health",
							"host": [
								"{{ip}}"
							],
							"path": [
								"health"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "rqID",
			"value": ""
		}
	]
}